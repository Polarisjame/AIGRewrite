@startuml Init
title Init

Class AIGMan{
    int nObjs
    int nPIs/nPOs
    int nNodes
    int nLevels
    int* pFanin
    void rewrite(-z:bool, Deduplicate:bool)
    refactor(MFFC:bool, -z:bool, cutSize:int):void
    balance(sortDecId:int):void
} 

namespace abcpatch{

    Struct GpuFrame{
        AIGMan* pMan
        bool activate
    }

    interface abcPatch{
        GpuFrame s_gpuFrame
        Abc_Ntk_t* pNtkNew
        void patchInitFunc()
        void registerAllAbcCommands()
    }

    interface abcPatchTransform{
        bool AbcNtkToGpuMan() : ABC->GPU
        Abc_Ntk_t * GpuManToAbcNtk() : GPU->ABC
    }

    interface cmdApi{
        void Cmd_CommandAdd()
    }

    interface abcPatchGpuCmd{
        int Abc_CommandGpuRead()
        int Abc_CommandGpuBalance()
        int Abc_CommandGpuRewrite()
        int Abc_CommandGpuGet()
        int Abc_CommandGpuPut()
        int Abc_CommandGpuRefactor()
        int Abc_CommandGpuResyn2()
        int Abc_CommandGpuCompress2()
        void registerAllAbcCommands()
    }
    abcPatch <|.. abcPatchGpuCmd
    abcPatchGpuCmd <|.. abcPatchTransform
    abcPatchGpuCmd <|.. cmdApi
}

GpuFrame <-- AIGMan

@enduml